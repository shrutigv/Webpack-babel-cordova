
> worker-loader@0.7.1 test D:\_host\github\worker-loader
> mocha



  worker-loader
Compilation {
  _plugins: 
   { 'normal-module-loader': [ [Function], [Function] ],
     'optimize-chunks-basic': [ [Function], [Function], [Function], [Function] ],
     'optimize-extracted-chunks-basic': [ [Function], [Function], [Function] ],
     'optimize-chunk-ids': [ [Function] ],
     'optimize-module-order': [ [Function] ],
     'optimize-chunk-order': [ [Function] ],
     'finish-modules': [ [Function] ],
     'optimize-modules-advanced': [ [Function] ],
     'record-modules': [ [Function] ],
     'revive-modules': [ [Function] ],
     'record-chunks': [ [Function] ],
     'revive-chunks': [ [Function] ],
     seal: [ [Function] ] },
  compiler: 
   Compiler {
     _plugins: 
      { 'before-run': [Object],
        'this-compilation': [Object],
        compilation: [Object],
        'after-resolvers': [Object],
        'entry-option': [Object],
        make: [Object],
        'after-emit': [Object],
        'watch-run': [Object],
        run: [Object],
        'after-compile': [Object] },
     outputPath: 'expected/no-fallbacks',
     outputFileSystem: NodeOutputFileSystem {},
     inputFileSystem: 
      CachedInputFileSystem {
        fileSystem: NodeJsInputFileSystem {},
        _statStorage: [Object],
        _readdirStorage: [Object],
        _readFileStorage: [Object],
        _readJsonStorage: [Object],
        _readlinkStorage: [Object],
        _stat: [Function: bound bound ],
        _statSync: [Function: bound bound ],
        _readdir: [Function: bound readdir],
        _readdirSync: [Function: bound readdirSync],
        _readFile: [Function: bound bound readFile],
        _readFileSync: [Function: bound bound ],
        _readJson: [Function: bound ],
        _readJsonSync: [Function: bound ],
        _readlink: [Function: bound bound ],
        _readlinkSync: [Function: bound bound ] },
     recordsInputPath: undefined,
     recordsOutputPath: undefined,
     records: { worker: [Object] },
     fileTimestamps: {},
     contextTimestamps: {},
     resolvers: { normal: [Object], loader: [Object], context: [Object] },
     parser: { plugin: [Function: bound ], apply: [Function: bound ] },
     options: 
      { entry: './fixtures/no-fallbacks/entry.js',
        output: [Object],
        module: [Object],
        devtool: false,
        cache: true,
        context: 'D:\\_host\\github\\worker-loader\\test',
        target: 'web',
        node: [Object],
        performance: [Object],
        resolve: [Object],
        resolveLoader: [Object] },
     context: 'D:\\_host\\github\\worker-loader\\test',
     watchFileSystem: 
      NodeWatchFileSystem {
        inputFileSystem: [Object],
        watcherOptions: [Object],
        watcher: [Object] },
     name: undefined,
     dependencies: undefined },
  resolvers: 
   { normal: Resolver { _plugins: [Object], fileSystem: [Object] },
     loader: Resolver { _plugins: [Object], fileSystem: [Object] },
     context: Resolver { _plugins: [Object], fileSystem: [Object] } },
  inputFileSystem: 
   CachedInputFileSystem {
     fileSystem: NodeJsInputFileSystem {},
     _statStorage: 
      Storage {
        duration: 60000,
        running: {},
        data: [Object],
        levels: [Object],
        count: 12,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _readdirStorage: 
      Storage {
        duration: 60000,
        running: {},
        data: {},
        levels: [Object],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound ] },
     _readFileStorage: 
      Storage {
        duration: 60000,
        running: [Object],
        data: [Object],
        levels: [Object],
        count: 10,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _readJsonStorage: 
      Storage {
        duration: 60000,
        running: {},
        data: [Object],
        levels: [Object],
        count: 8,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _readlinkStorage: 
      Storage {
        duration: 60000,
        running: {},
        data: [Object],
        levels: [Object],
        count: 19,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _stat: [Function: bound bound ],
     _statSync: [Function: bound bound ],
     _readdir: [Function: bound readdir],
     _readdirSync: [Function: bound readdirSync],
     _readFile: [Function: bound bound readFile],
     _readFileSync: [Function: bound bound ],
     _readJson: [Function: bound ],
     _readJsonSync: [Function: bound ],
     _readlink: [Function: bound bound ],
     _readlinkSync: [Function: bound bound ] },
  options: 
   { entry: './fixtures/no-fallbacks/entry.js',
     output: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     module: 
      { rules: [Object],
        unknownContextRequest: '.',
        unknownContextRegExp: false,
        unknownContextRecursive: true,
        unknownContextCritical: true,
        exprContextRequest: '.',
        exprContextRegExp: false,
        exprContextRecursive: true,
        exprContextCritical: true,
        wrappedContextRegExp: /.*/,
        wrappedContextRecursive: true,
        wrappedContextCritical: false,
        unsafeCache: true },
     devtool: false,
     cache: true,
     context: 'D:\\_host\\github\\worker-loader\\test',
     target: 'web',
     node: 
      { console: false,
        process: true,
        global: true,
        Buffer: true,
        setImmediate: true,
        __filename: 'mock',
        __dirname: 'mock' },
     performance: { maxAssetSize: 250000, maxEntrypointSize: 250000, hints: false },
     resolve: 
      { unsafeCache: true,
        modules: [Object],
        extensions: [Object],
        aliasFields: [Object],
        mainFields: [Object] },
     resolveLoader: { unsafeCache: true, mainFields: [Object], extensions: [Object] } },
  outputOptions: 
   { path: 'expected/no-fallbacks',
     filename: 'bundle.js',
     chunkFilename: '[id].bundle.js',
     library: '',
     hotUpdateFunction: 'webpackHotUpdate',
     jsonpFunction: 'webpackJsonp',
     libraryTarget: 'var',
     sourceMapFilename: '[file].map[query]',
     hotUpdateChunkFilename: '[id].[hash].hot-update.js',
     hotUpdateMainFilename: '[hash].hot-update.json',
     crossOriginLoading: false,
     hashFunction: 'md5',
     hashDigest: 'hex',
     hashDigestLength: 20,
     devtoolLineToLine: false,
     strictModuleExceptionHandling: false },
  bail: undefined,
  profile: undefined,
  performance: { maxAssetSize: 250000, maxEntrypointSize: 250000, hints: false },
  mainTemplate: 
   MainTemplate {
     _plugins: 
      { startup: [Object],
        render: [Object],
        'local-vars': [Object],
        require: [Object],
        'module-obj': [Object],
        'require-extensions': [Object],
        'jsonp-script': [Object],
        'require-ensure': [Object],
        bootstrap: [Object],
        'hot-bootstrap': [Object],
        hash: [Object],
        'asset-path': [Object],
        'global-hash': [Object],
        'hash-for-chunk': [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     requireFn: '__webpack_require__' },
  chunkTemplate: 
   ChunkTemplate {
     _plugins: { render: [Object], hash: [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false } },
  hotUpdateChunkTemplate: 
   HotUpdateChunkTemplate {
     _plugins: { render: [Object], hash: [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false } },
  moduleTemplate: 
   ModuleTemplate {
     _plugins: { render: [Object], package: [Object], hash: [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     requestShortener: 
      RequestShortener {
        currentDirectoryRegExp: /^D:\/_host\/github\/worker\-loader\/test|(!)D:\/_host\/github\/worker\-loader\/test/g,
        parentDirectoryRegExp: /^D:\/_host\/github\/worker\-loader|(!)D:\/_host\/github\/worker\-loader/g,
        buildinsAsModule: false,
        buildinsRegExp: /^D:\/_host\/github\/worker\-loader\/node_modules\/webpack|(!)D:\/_host\/github\/worker\-loader\/node_modules\/webpack/g,
        nodeModulesRegExp: /\/node_modules\//g,
        indexJsRegExp: /\/index.js(!|\?|\(query\))/g } },
  entries: 
   [ NormalModule {
       dependencies: [Object],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [],
       debugId: 1000,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       rawRequest: './fixtures/no-fallbacks/entry.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       loaders: [],
       fileDependencies: [Object],
       contextDependencies: [],
       error: null,
       _source: [Object],
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: null,
       building: undefined,
       buildTimestamp: 1488023573252,
       cacheable: true } ],
  preparedChunks: [ { name: 'main', module: null } ],
  entrypoints: {},
  chunks: [],
  namedChunks: {},
  modules: 
   [ NormalModule {
       dependencies: [Object],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [],
       debugId: 1000,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       rawRequest: './fixtures/no-fallbacks/entry.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       loaders: [],
       fileDependencies: [Object],
       contextDependencies: [],
       error: null,
       _source: [Object],
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: null,
       building: undefined,
       buildTimestamp: 1488023573252,
       cacheable: true },
     NormalModule {
       dependencies: [],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [Object],
       debugId: 1001,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
       rawRequest: './w1.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
       loaders: [Object],
       fileDependencies: [],
       contextDependencies: [],
       error: null,
       _source: null,
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: [Object],
       optional: false,
       building: [Object],
       buildTimestamp: 1488023573268,
       cacheable: false },
     NormalModule {
       dependencies: [],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [Object],
       debugId: 1002,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
       rawRequest: './w2.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
       loaders: [Object],
       fileDependencies: [],
       contextDependencies: [],
       error: null,
       _source: null,
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: [Object],
       optional: false,
       building: [Object],
       buildTimestamp: 1488023573283,
       cacheable: false } ],
  _modules: 
   { 'D:\_host\github\worker-loader\test\fixtures\no-fallbacks\entry.js': 
      NormalModule {
        dependencies: [Object],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [],
        debugId: 1000,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        rawRequest: './fixtures/no-fallbacks/entry.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        loaders: [],
        fileDependencies: [Object],
        contextDependencies: [],
        error: null,
        _source: [Object],
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: null,
        building: undefined,
        buildTimestamp: 1488023573252,
        cacheable: true },
     'D:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': 
      NormalModule {
        dependencies: [],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1001,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        rawRequest: './w1.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: null,
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: [Object],
        buildTimestamp: 1488023573268,
        cacheable: false },
     'D:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': 
      NormalModule {
        dependencies: [],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1002,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        rawRequest: './w2.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: null,
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: [Object],
        buildTimestamp: 1488023573283,
        cacheable: false } },
  cache: 
   { 'mD:\_host\github\worker-loader\test\fixtures\no-fallbacks\entry.js': 
      NormalModule {
        dependencies: [Object],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [],
        debugId: 1000,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        rawRequest: './fixtures/no-fallbacks/entry.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        loaders: [],
        fileDependencies: [Object],
        contextDependencies: [],
        error: null,
        _source: [Object],
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: null,
        building: undefined,
        buildTimestamp: 1488023573252,
        cacheable: true },
     'mD:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': 
      NormalModule {
        dependencies: [],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1001,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        rawRequest: './w1.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: null,
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: [Object],
        buildTimestamp: 1488023573268,
        cacheable: false },
     'subcache D:\_host\github\worker-loader D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': 
      { 'mD:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': [Object],
        c0: [Object] },
     'mD:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': 
      NormalModule {
        dependencies: [],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1002,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        rawRequest: './w2.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: null,
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: [Object],
        buildTimestamp: 1488023573283,
        cacheable: false },
     'subcache D:\_host\github\worker-loader D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': { 'mD:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': [Object] } },
  records: { worker: [ [Object], {} ] },
  nextFreeModuleIndex: undefined,
  nextFreeModuleIndex2: undefined,
  additionalChunkAssets: [],
  assets: {},
  errors: [],
  warnings: [],
  children: 
   [ Compilation {
       _plugins: [Object],
       compiler: [Object],
       resolvers: [Object],
       inputFileSystem: [Object],
       options: [Object],
       outputOptions: [Object],
       bail: undefined,
       profile: undefined,
       performance: [Object],
       mainTemplate: [Object],
       chunkTemplate: [Object],
       hotUpdateChunkTemplate: [Object],
       moduleTemplate: [Object],
       entries: [Object],
       preparedChunks: [Object],
       entrypoints: [Object],
       chunks: [Object],
       namedChunks: [Object],
       modules: [Object],
       _modules: [Object],
       cache: [Object],
       records: [Object],
       nextFreeModuleIndex: 1,
       nextFreeModuleIndex2: 1,
       additionalChunkAssets: [],
       assets: [Object],
       errors: [],
       warnings: [],
       children: [],
       dependencyFactories: [Object],
       dependencyTemplates: [Object],
       fileTimestamps: {},
       contextTimestamps: {},
       name: 'worker',
       compilationDependencies: [],
       fullHash: 'c018cb2a2db59eec2baaae9bef5ff828',
       hash: 'c018cb2a2db59eec2baa',
       fileDependencies: [Object],
       contextDependencies: [],
       missingDependencies: [] } ],
  dependencyFactories: 
   Map {
     [Function: SingleEntryDependency] => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: ConstDependency] Template: [Function: ConstDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyImportDependency]
     Template: [Function: HarmonyImportDependencyTemplate],
     makeImportStatement: [Function: makeImportStatement] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: HarmonyImportSpecifierDependency]
     Template: [Function: HarmonyImportSpecifierDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyCompatibilityDependency] Template: [Function: HarmonyExportDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportHeaderDependency] Template: [Function: HarmonyExportDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportExpressionDependency] Template: [Function: HarmonyExportDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportSpecifierDependency]
     Template: [Function: HarmonyExportSpecifierDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportImportedSpecifierDependency]
     Template: [Function: HarmonyExportImportedSpecifierDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyAcceptDependency] Template: [Function: HarmonyAcceptDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyAcceptImportDependency] Template: [Function: HarmonyAcceptImportDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: AMDRequireDependency] Template: [Function: AMDRequireDependencyTemplate] } => NullFactory {},
     { [Function: AMDRequireItemDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: AMDRequireArrayDependency] Template: [Function: AMDRequireArrayDependencyTemplate] } => NullFactory {},
     { [Function: AMDRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     { [Function: AMDDefineDependency] Template: [Function: AMDDefineDependencyTemplate] } => NullFactory {},
     { [Function: UnsupportedDependency] Template: [Function: UnsupportedDependencyTemplate] } => NullFactory {},
     { [Function: LocalModuleDependency] Template: [Function: LocalModuleDependencyTemplate] } => NullFactory {},
     { [Function: CommonJsRequireDependency] Template: [Function: ModuleDependencyTemplateAsId] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: CommonJsRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     { [Function: RequireResolveDependency] Template: [Function: ModuleDependencyTemplateAsId] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireResolveContextDependency] Template: [Function: ContextDependencyTemplateAsId] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     { [Function: RequireResolveHeaderDependency]
     Template: [Function: RequireResolveHeaderDependencyTemplate] } => NullFactory {},
     { [Function: RequireHeaderDependency] Template: [Function: RequireHeaderDependencyTemplate] } => NullFactory {},
     [Function: LoaderDependency] => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireIncludeDependency] Template: [Function: RequireIncludeDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireEnsureItemDependency] Template: [Function: NullDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireEnsureDependency] Template: [Function: RequireEnsureDependencyTemplate] } => NullFactory {},
     { [Function: RequireContextDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     [Function: ContextElementDependency] => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: ImportDependency] Template: [Function: ImportDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: ImportContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] } },
  dependencyTemplates: 
   Map {
     { [Function: ConstDependency] Template: [Function: ConstDependencyTemplate] } => ConstDependencyTemplate {},
     { [Function: HarmonyImportDependency]
     Template: [Function: HarmonyImportDependencyTemplate],
     makeImportStatement: [Function: makeImportStatement] } => HarmonyImportDependencyTemplate {},
     { [Function: HarmonyImportSpecifierDependency]
     Template: [Function: HarmonyImportSpecifierDependencyTemplate] } => HarmonyImportSpecifierDependencyTemplate {},
     { [Function: HarmonyCompatibilityDependency] Template: [Function: HarmonyExportDependencyTemplate] } => HarmonyExportDependencyTemplate {},
     { [Function: HarmonyExportHeaderDependency] Template: [Function: HarmonyExportDependencyTemplate] } => HarmonyExportDependencyTemplate {},
     { [Function: HarmonyExportExpressionDependency] Template: [Function: HarmonyExportDependencyTemplate] } => HarmonyExportDependencyTemplate {},
     { [Function: HarmonyExportSpecifierDependency]
     Template: [Function: HarmonyExportSpecifierDependencyTemplate] } => HarmonyExportSpecifierDependencyTemplate {},
     { [Function: HarmonyExportImportedSpecifierDependency]
     Template: [Function: HarmonyExportImportedSpecifierDependencyTemplate] } => HarmonyExportImportedSpecifierDependencyTemplate {},
     { [Function: HarmonyAcceptDependency] Template: [Function: HarmonyAcceptDependencyTemplate] } => HarmonyAcceptDependencyTemplate {},
     { [Function: HarmonyAcceptImportDependency] Template: [Function: HarmonyAcceptImportDependencyTemplate] } => HarmonyAcceptImportDependencyTemplate {},
     { [Function: AMDRequireDependency] Template: [Function: AMDRequireDependencyTemplate] } => AMDRequireDependencyTemplate {},
     { [Function: AMDRequireItemDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => ModuleDependencyTemplateAsRequireId {},
     { [Function: AMDRequireArrayDependency] Template: [Function: AMDRequireArrayDependencyTemplate] } => AMDRequireArrayDependencyTemplate {},
     { [Function: AMDRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextDependencyTemplateAsRequireCall {},
     { [Function: AMDDefineDependency] Template: [Function: AMDDefineDependencyTemplate] } => AMDDefineDependencyTemplate {},
     { [Function: UnsupportedDependency] Template: [Function: UnsupportedDependencyTemplate] } => UnsupportedDependencyTemplate {},
     { [Function: LocalModuleDependency] Template: [Function: LocalModuleDependencyTemplate] } => LocalModuleDependencyTemplate {},
     { [Function: CommonJsRequireDependency] Template: [Function: ModuleDependencyTemplateAsId] } => ModuleDependencyTemplateAsId {},
     { [Function: CommonJsRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextDependencyTemplateAsRequireCall {},
     { [Function: RequireResolveDependency] Template: [Function: ModuleDependencyTemplateAsId] } => ModuleDependencyTemplateAsId {},
     { [Function: RequireResolveContextDependency] Template: [Function: ContextDependencyTemplateAsId] } => ContextDependencyTemplateAsId {},
     { [Function: RequireResolveHeaderDependency]
     Template: [Function: RequireResolveHeaderDependencyTemplate] } => RequireResolveHeaderDependencyTemplate {},
     { [Function: RequireHeaderDependency] Template: [Function: RequireHeaderDependencyTemplate] } => RequireHeaderDependencyTemplate {},
     { [Function: RequireIncludeDependency] Template: [Function: RequireIncludeDependencyTemplate] } => RequireIncludeDependencyTemplate {},
     { [Function: RequireEnsureItemDependency] Template: [Function: NullDependencyTemplate] } => NullDependencyTemplate {},
     { [Function: RequireEnsureDependency] Template: [Function: RequireEnsureDependencyTemplate] } => RequireEnsureDependencyTemplate {},
     { [Function: RequireContextDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => ModuleDependencyTemplateAsRequireId {},
     { [Function: ImportDependency] Template: [Function: ImportDependencyTemplate] } => ImportDependencyTemplate {},
     { [Function: ImportContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextDependencyTemplateAsRequireCall {} },
  fileTimestamps: {},
  contextTimestamps: {},
  name: undefined,
  compilationDependencies: [] }
Compilation {
  _plugins: 
   { 'normal-module-loader': [ [Function], [Function] ],
     'optimize-chunks-basic': [ [Function], [Function], [Function], [Function] ],
     'optimize-extracted-chunks-basic': [ [Function], [Function], [Function] ],
     'optimize-chunk-ids': [ [Function] ],
     'optimize-module-order': [ [Function] ],
     'optimize-chunk-order': [ [Function] ],
     'finish-modules': [ [Function] ],
     'optimize-modules-advanced': [ [Function] ],
     'record-modules': [ [Function] ],
     'revive-modules': [ [Function] ],
     'record-chunks': [ [Function] ],
     'revive-chunks': [ [Function] ],
     seal: [ [Function] ] },
  compiler: 
   Compiler {
     _plugins: 
      { 'before-run': [Object],
        'this-compilation': [Object],
        compilation: [Object],
        'after-resolvers': [Object],
        'entry-option': [Object],
        make: [Object],
        'after-emit': [Object],
        'watch-run': [Object],
        run: [Object],
        'after-compile': [Object] },
     outputPath: 'expected/no-fallbacks',
     outputFileSystem: NodeOutputFileSystem {},
     inputFileSystem: 
      CachedInputFileSystem {
        fileSystem: NodeJsInputFileSystem {},
        _statStorage: [Object],
        _readdirStorage: [Object],
        _readFileStorage: [Object],
        _readJsonStorage: [Object],
        _readlinkStorage: [Object],
        _stat: [Function: bound bound ],
        _statSync: [Function: bound bound ],
        _readdir: [Function: bound readdir],
        _readdirSync: [Function: bound readdirSync],
        _readFile: [Function: bound bound readFile],
        _readFileSync: [Function: bound bound ],
        _readJson: [Function: bound ],
        _readJsonSync: [Function: bound ],
        _readlink: [Function: bound bound ],
        _readlinkSync: [Function: bound bound ] },
     recordsInputPath: undefined,
     recordsOutputPath: undefined,
     records: { worker: [Object] },
     fileTimestamps: {},
     contextTimestamps: {},
     resolvers: { normal: [Object], loader: [Object], context: [Object] },
     parser: { plugin: [Function: bound ], apply: [Function: bound ] },
     options: 
      { entry: './fixtures/no-fallbacks/entry.js',
        output: [Object],
        module: [Object],
        devtool: false,
        cache: true,
        context: 'D:\\_host\\github\\worker-loader\\test',
        target: 'web',
        node: [Object],
        performance: [Object],
        resolve: [Object],
        resolveLoader: [Object] },
     context: 'D:\\_host\\github\\worker-loader\\test',
     watchFileSystem: 
      NodeWatchFileSystem {
        inputFileSystem: [Object],
        watcherOptions: [Object],
        watcher: [Object] },
     name: undefined,
     dependencies: undefined },
  resolvers: 
   { normal: Resolver { _plugins: [Object], fileSystem: [Object] },
     loader: Resolver { _plugins: [Object], fileSystem: [Object] },
     context: Resolver { _plugins: [Object], fileSystem: [Object] } },
  inputFileSystem: 
   CachedInputFileSystem {
     fileSystem: NodeJsInputFileSystem {},
     _statStorage: 
      Storage {
        duration: 60000,
        running: {},
        data: [Object],
        levels: [Object],
        count: 12,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _readdirStorage: 
      Storage {
        duration: 60000,
        running: {},
        data: {},
        levels: [Object],
        count: 0,
        interval: null,
        needTickCheck: false,
        nextTick: null,
        passive: true,
        tick: [Function: bound ] },
     _readFileStorage: 
      Storage {
        duration: 60000,
        running: [Object],
        data: [Object],
        levels: [Object],
        count: 11,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _readJsonStorage: 
      Storage {
        duration: 60000,
        running: [Object],
        data: [Object],
        levels: [Object],
        count: 8,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _readlinkStorage: 
      Storage {
        duration: 60000,
        running: {},
        data: [Object],
        levels: [Object],
        count: 19,
        interval: [Object],
        needTickCheck: false,
        nextTick: null,
        passive: false,
        tick: [Function: bound ] },
     _stat: [Function: bound bound ],
     _statSync: [Function: bound bound ],
     _readdir: [Function: bound readdir],
     _readdirSync: [Function: bound readdirSync],
     _readFile: [Function: bound bound readFile],
     _readFileSync: [Function: bound bound ],
     _readJson: [Function: bound ],
     _readJsonSync: [Function: bound ],
     _readlink: [Function: bound bound ],
     _readlinkSync: [Function: bound bound ] },
  options: 
   { entry: './fixtures/no-fallbacks/entry.js',
     output: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     module: 
      { rules: [Object],
        unknownContextRequest: '.',
        unknownContextRegExp: false,
        unknownContextRecursive: true,
        unknownContextCritical: true,
        exprContextRequest: '.',
        exprContextRegExp: false,
        exprContextRecursive: true,
        exprContextCritical: true,
        wrappedContextRegExp: /.*/,
        wrappedContextRecursive: true,
        wrappedContextCritical: false,
        unsafeCache: true },
     devtool: false,
     cache: true,
     context: 'D:\\_host\\github\\worker-loader\\test',
     target: 'web',
     node: 
      { console: false,
        process: true,
        global: true,
        Buffer: true,
        setImmediate: true,
        __filename: 'mock',
        __dirname: 'mock' },
     performance: { maxAssetSize: 250000, maxEntrypointSize: 250000, hints: false },
     resolve: 
      { unsafeCache: true,
        modules: [Object],
        extensions: [Object],
        aliasFields: [Object],
        mainFields: [Object] },
     resolveLoader: { unsafeCache: true, mainFields: [Object], extensions: [Object] } },
  outputOptions: 
   { path: 'expected/no-fallbacks',
     filename: 'bundle.js',
     chunkFilename: '[id].bundle.js',
     library: '',
     hotUpdateFunction: 'webpackHotUpdate',
     jsonpFunction: 'webpackJsonp',
     libraryTarget: 'var',
     sourceMapFilename: '[file].map[query]',
     hotUpdateChunkFilename: '[id].[hash].hot-update.js',
     hotUpdateMainFilename: '[hash].hot-update.json',
     crossOriginLoading: false,
     hashFunction: 'md5',
     hashDigest: 'hex',
     hashDigestLength: 20,
     devtoolLineToLine: false,
     strictModuleExceptionHandling: false },
  bail: undefined,
  profile: undefined,
  performance: { maxAssetSize: 250000, maxEntrypointSize: 250000, hints: false },
  mainTemplate: 
   MainTemplate {
     _plugins: 
      { startup: [Object],
        render: [Object],
        'local-vars': [Object],
        require: [Object],
        'module-obj': [Object],
        'require-extensions': [Object],
        'jsonp-script': [Object],
        'require-ensure': [Object],
        bootstrap: [Object],
        'hot-bootstrap': [Object],
        hash: [Object],
        'asset-path': [Object],
        'global-hash': [Object],
        'hash-for-chunk': [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     requireFn: '__webpack_require__' },
  chunkTemplate: 
   ChunkTemplate {
     _plugins: { render: [Object], hash: [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false } },
  hotUpdateChunkTemplate: 
   HotUpdateChunkTemplate {
     _plugins: { render: [Object], hash: [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false } },
  moduleTemplate: 
   ModuleTemplate {
     _plugins: { render: [Object], package: [Object], hash: [Object] },
     outputOptions: 
      { path: 'expected/no-fallbacks',
        filename: 'bundle.js',
        chunkFilename: '[id].bundle.js',
        library: '',
        hotUpdateFunction: 'webpackHotUpdate',
        jsonpFunction: 'webpackJsonp',
        libraryTarget: 'var',
        sourceMapFilename: '[file].map[query]',
        hotUpdateChunkFilename: '[id].[hash].hot-update.js',
        hotUpdateMainFilename: '[hash].hot-update.json',
        crossOriginLoading: false,
        hashFunction: 'md5',
        hashDigest: 'hex',
        hashDigestLength: 20,
        devtoolLineToLine: false,
        strictModuleExceptionHandling: false },
     requestShortener: 
      RequestShortener {
        currentDirectoryRegExp: /^D:\/_host\/github\/worker\-loader\/test|(!)D:\/_host\/github\/worker\-loader\/test/g,
        parentDirectoryRegExp: /^D:\/_host\/github\/worker\-loader|(!)D:\/_host\/github\/worker\-loader/g,
        buildinsAsModule: false,
        buildinsRegExp: /^D:\/_host\/github\/worker\-loader\/node_modules\/webpack|(!)D:\/_host\/github\/worker\-loader\/node_modules\/webpack/g,
        nodeModulesRegExp: /\/node_modules\//g,
        indexJsRegExp: /\/index.js(!|\?|\(query\))/g } },
  entries: 
   [ NormalModule {
       dependencies: [Object],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [],
       debugId: 1000,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       rawRequest: './fixtures/no-fallbacks/entry.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       loaders: [],
       fileDependencies: [Object],
       contextDependencies: [],
       error: null,
       _source: [Object],
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: null,
       building: undefined,
       buildTimestamp: 1488023573252,
       cacheable: true } ],
  preparedChunks: [ { name: 'main', module: null } ],
  entrypoints: {},
  chunks: [],
  namedChunks: {},
  modules: 
   [ NormalModule {
       dependencies: [Object],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [],
       debugId: 1000,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       rawRequest: './fixtures/no-fallbacks/entry.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
       loaders: [],
       fileDependencies: [Object],
       contextDependencies: [],
       error: null,
       _source: [Object],
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: null,
       building: undefined,
       buildTimestamp: 1488023573252,
       cacheable: true },
     NormalModule {
       dependencies: [Object],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [Object],
       debugId: 1001,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
       rawRequest: './w1.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
       loaders: [Object],
       fileDependencies: [],
       contextDependencies: [],
       error: null,
       _source: [Object],
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: [Object],
       optional: false,
       building: undefined,
       buildTimestamp: 1488023573268,
       cacheable: false },
     NormalModule {
       dependencies: [],
       blocks: [],
       variables: [],
       context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
       reasons: [Object],
       debugId: 1002,
       lastId: null,
       id: null,
       portableId: null,
       index: null,
       index2: null,
       depth: null,
       used: null,
       usedExports: null,
       providedExports: null,
       chunks: [],
       warnings: [],
       dependenciesWarnings: [],
       errors: [],
       dependenciesErrors: [],
       strict: false,
       meta: {},
       request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
       userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
       rawRequest: './w2.js',
       parser: [Object],
       resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
       loaders: [Object],
       fileDependencies: [],
       contextDependencies: [],
       error: null,
       _source: null,
       assets: {},
       built: true,
       _cachedSource: null,
       issuer: [Object],
       optional: false,
       building: [Object],
       buildTimestamp: 1488023573283,
       cacheable: false } ],
  _modules: 
   { 'D:\_host\github\worker-loader\test\fixtures\no-fallbacks\entry.js': 
      NormalModule {
        dependencies: [Object],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [],
        debugId: 1000,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        rawRequest: './fixtures/no-fallbacks/entry.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        loaders: [],
        fileDependencies: [Object],
        contextDependencies: [],
        error: null,
        _source: [Object],
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: null,
        building: undefined,
        buildTimestamp: 1488023573252,
        cacheable: true },
     'D:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': 
      NormalModule {
        dependencies: [Object],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1001,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        rawRequest: './w1.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: [Object],
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: undefined,
        buildTimestamp: 1488023573268,
        cacheable: false },
     'D:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': 
      NormalModule {
        dependencies: [],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1002,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        rawRequest: './w2.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: null,
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: [Object],
        buildTimestamp: 1488023573283,
        cacheable: false } },
  cache: 
   { 'mD:\_host\github\worker-loader\test\fixtures\no-fallbacks\entry.js': 
      NormalModule {
        dependencies: [Object],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [],
        debugId: 1000,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        rawRequest: './fixtures/no-fallbacks/entry.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\entry.js',
        loaders: [],
        fileDependencies: [Object],
        contextDependencies: [],
        error: null,
        _source: [Object],
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: null,
        building: undefined,
        buildTimestamp: 1488023573252,
        cacheable: true },
     'mD:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': 
      NormalModule {
        dependencies: [Object],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1001,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        rawRequest: './w1.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w1.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: [Object],
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: undefined,
        buildTimestamp: 1488023573268,
        cacheable: false },
     'subcache D:\_host\github\worker-loader D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': 
      { 'mD:\_host\github\worker-loader\test\fixtures\no-fallbacks\w1.js': [Object],
        c0: [Object] },
     'mD:\_host\github\worker-loader\index.js??ref--0!D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': 
      NormalModule {
        dependencies: [],
        blocks: [],
        variables: [],
        context: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks',
        reasons: [Object],
        debugId: 1002,
        lastId: null,
        id: null,
        portableId: null,
        index: null,
        index2: null,
        depth: null,
        used: null,
        usedExports: null,
        providedExports: null,
        chunks: [],
        warnings: [],
        dependenciesWarnings: [],
        errors: [],
        dependenciesErrors: [],
        strict: false,
        meta: {},
        request: 'D:\\_host\\github\\worker-loader\\index.js??ref--0!D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        userRequest: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        rawRequest: './w2.js',
        parser: [Object],
        resource: 'D:\\_host\\github\\worker-loader\\test\\fixtures\\no-fallbacks\\w2.js',
        loaders: [Object],
        fileDependencies: [],
        contextDependencies: [],
        error: null,
        _source: null,
        assets: {},
        built: true,
        _cachedSource: null,
        issuer: [Object],
        optional: false,
        building: [Object],
        buildTimestamp: 1488023573283,
        cacheable: false },
     'subcache D:\_host\github\worker-loader D:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': 
      { 'mD:\_host\github\worker-loader\test\fixtures\no-fallbacks\w2.js': [Object],
        c0: [Object] } },
  records: { worker: [ [Object], [Object] ] },
  nextFreeModuleIndex: undefined,
  nextFreeModuleIndex2: undefined,
  additionalChunkAssets: [],
  assets: {},
  errors: [],
  warnings: [],
  children: 
   [ Compilation {
       _plugins: [Object],
       compiler: [Object],
       resolvers: [Object],
       inputFileSystem: [Object],
       options: [Object],
       outputOptions: [Object],
       bail: undefined,
       profile: undefined,
       performance: [Object],
       mainTemplate: [Object],
       chunkTemplate: [Object],
       hotUpdateChunkTemplate: [Object],
       moduleTemplate: [Object],
       entries: [Object],
       preparedChunks: [Object],
       entrypoints: [Object],
       chunks: [Object],
       namedChunks: [Object],
       modules: [Object],
       _modules: [Object],
       cache: [Object],
       records: [Object],
       nextFreeModuleIndex: 1,
       nextFreeModuleIndex2: 1,
       additionalChunkAssets: [],
       assets: [Object],
       errors: [],
       warnings: [],
       children: [],
       dependencyFactories: [Object],
       dependencyTemplates: [Object],
       fileTimestamps: {},
       contextTimestamps: {},
       name: 'worker',
       compilationDependencies: [],
       fullHash: 'c018cb2a2db59eec2baaae9bef5ff828',
       hash: 'c018cb2a2db59eec2baa',
       fileDependencies: [Object],
       contextDependencies: [],
       missingDependencies: [] },
     Compilation {
       _plugins: [Object],
       compiler: [Object],
       resolvers: [Object],
       inputFileSystem: [Object],
       options: [Object],
       outputOptions: [Object],
       bail: undefined,
       profile: undefined,
       performance: [Object],
       mainTemplate: [Object],
       chunkTemplate: [Object],
       hotUpdateChunkTemplate: [Object],
       moduleTemplate: [Object],
       entries: [Object],
       preparedChunks: [Object],
       entrypoints: [Object],
       chunks: [Object],
       namedChunks: [Object],
       modules: [Object],
       _modules: [Object],
       cache: [Object],
       records: [Object],
       nextFreeModuleIndex: 1,
       nextFreeModuleIndex2: 1,
       additionalChunkAssets: [],
       assets: [Object],
       errors: [],
       warnings: [],
       children: [],
       dependencyFactories: [Object],
       dependencyTemplates: [Object],
       fileTimestamps: {},
       contextTimestamps: {},
       name: 'worker',
       compilationDependencies: [],
       fullHash: '6965052681590924c079757821b18953',
       hash: '6965052681590924c079',
       fileDependencies: [Object],
       contextDependencies: [],
       missingDependencies: [] } ],
  dependencyFactories: 
   Map {
     [Function: SingleEntryDependency] => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: ConstDependency] Template: [Function: ConstDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyImportDependency]
     Template: [Function: HarmonyImportDependencyTemplate],
     makeImportStatement: [Function: makeImportStatement] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: HarmonyImportSpecifierDependency]
     Template: [Function: HarmonyImportSpecifierDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyCompatibilityDependency] Template: [Function: HarmonyExportDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportHeaderDependency] Template: [Function: HarmonyExportDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportExpressionDependency] Template: [Function: HarmonyExportDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportSpecifierDependency]
     Template: [Function: HarmonyExportSpecifierDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyExportImportedSpecifierDependency]
     Template: [Function: HarmonyExportImportedSpecifierDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyAcceptDependency] Template: [Function: HarmonyAcceptDependencyTemplate] } => NullFactory {},
     { [Function: HarmonyAcceptImportDependency] Template: [Function: HarmonyAcceptImportDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: AMDRequireDependency] Template: [Function: AMDRequireDependencyTemplate] } => NullFactory {},
     { [Function: AMDRequireItemDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: AMDRequireArrayDependency] Template: [Function: AMDRequireArrayDependencyTemplate] } => NullFactory {},
     { [Function: AMDRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     { [Function: AMDDefineDependency] Template: [Function: AMDDefineDependencyTemplate] } => NullFactory {},
     { [Function: UnsupportedDependency] Template: [Function: UnsupportedDependencyTemplate] } => NullFactory {},
     { [Function: LocalModuleDependency] Template: [Function: LocalModuleDependencyTemplate] } => NullFactory {},
     { [Function: CommonJsRequireDependency] Template: [Function: ModuleDependencyTemplateAsId] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: CommonJsRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     { [Function: RequireResolveDependency] Template: [Function: ModuleDependencyTemplateAsId] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireResolveContextDependency] Template: [Function: ContextDependencyTemplateAsId] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     { [Function: RequireResolveHeaderDependency]
     Template: [Function: RequireResolveHeaderDependencyTemplate] } => NullFactory {},
     { [Function: RequireHeaderDependency] Template: [Function: RequireHeaderDependencyTemplate] } => NullFactory {},
     [Function: LoaderDependency] => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireIncludeDependency] Template: [Function: RequireIncludeDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireEnsureItemDependency] Template: [Function: NullDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: RequireEnsureDependency] Template: [Function: RequireEnsureDependencyTemplate] } => NullFactory {},
     { [Function: RequireContextDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] },
     [Function: ContextElementDependency] => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: ImportDependency] Template: [Function: ImportDependencyTemplate] } => NormalModuleFactory {
     _plugins: [Object],
     resolvers: [Object],
     ruleSet: [Object],
     cachePredicate: [Function: bound Boolean],
     context: 'D:\\_host\\github\\worker-loader\\test',
     parserCache: [Object] },
     { [Function: ImportContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextModuleFactory { _plugins: [Object], resolvers: [Object] } },
  dependencyTemplates: 
   Map {
     { [Function: ConstDependency] Template: [Function: ConstDependencyTemplate] } => ConstDependencyTemplate {},
     { [Function: HarmonyImportDependency]
     Template: [Function: HarmonyImportDependencyTemplate],
     makeImportStatement: [Function: makeImportStatement] } => HarmonyImportDependencyTemplate {},
     { [Function: HarmonyImportSpecifierDependency]
     Template: [Function: HarmonyImportSpecifierDependencyTemplate] } => HarmonyImportSpecifierDependencyTemplate {},
     { [Function: HarmonyCompatibilityDependency] Template: [Function: HarmonyExportDependencyTemplate] } => HarmonyExportDependencyTemplate {},
     { [Function: HarmonyExportHeaderDependency] Template: [Function: HarmonyExportDependencyTemplate] } => HarmonyExportDependencyTemplate {},
     { [Function: HarmonyExportExpressionDependency] Template: [Function: HarmonyExportDependencyTemplate] } => HarmonyExportDependencyTemplate {},
     { [Function: HarmonyExportSpecifierDependency]
     Template: [Function: HarmonyExportSpecifierDependencyTemplate] } => HarmonyExportSpecifierDependencyTemplate {},
     { [Function: HarmonyExportImportedSpecifierDependency]
     Template: [Function: HarmonyExportImportedSpecifierDependencyTemplate] } => HarmonyExportImportedSpecifierDependencyTemplate {},
     { [Function: HarmonyAcceptDependency] Template: [Function: HarmonyAcceptDependencyTemplate] } => HarmonyAcceptDependencyTemplate {},
     { [Function: HarmonyAcceptImportDependency] Template: [Function: HarmonyAcceptImportDependencyTemplate] } => HarmonyAcceptImportDependencyTemplate {},
     { [Function: AMDRequireDependency] Template: [Function: AMDRequireDependencyTemplate] } => AMDRequireDependencyTemplate {},
     { [Function: AMDRequireItemDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => ModuleDependencyTemplateAsRequireId {},
     { [Function: AMDRequireArrayDependency] Template: [Function: AMDRequireArrayDependencyTemplate] } => AMDRequireArrayDependencyTemplate {},
     { [Function: AMDRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextDependencyTemplateAsRequireCall {},
     { [Function: AMDDefineDependency] Template: [Function: AMDDefineDependencyTemplate] } => AMDDefineDependencyTemplate {},
     { [Function: UnsupportedDependency] Template: [Function: UnsupportedDependencyTemplate] } => UnsupportedDependencyTemplate {},
     { [Function: LocalModuleDependency] Template: [Function: LocalModuleDependencyTemplate] } => LocalModuleDependencyTemplate {},
     { [Function: CommonJsRequireDependency] Template: [Function: ModuleDependencyTemplateAsId] } => ModuleDependencyTemplateAsId {},
     { [Function: CommonJsRequireContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextDependencyTemplateAsRequireCall {},
     { [Function: RequireResolveDependency] Template: [Function: ModuleDependencyTemplateAsId] } => ModuleDependencyTemplateAsId {},
     { [Function: RequireResolveContextDependency] Template: [Function: ContextDependencyTemplateAsId] } => ContextDependencyTemplateAsId {},
     { [Function: RequireResolveHeaderDependency]
     Template: [Function: RequireResolveHeaderDependencyTemplate] } => RequireResolveHeaderDependencyTemplate {},
     { [Function: RequireHeaderDependency] Template: [Function: RequireHeaderDependencyTemplate] } => RequireHeaderDependencyTemplate {},
     { [Function: RequireIncludeDependency] Template: [Function: RequireIncludeDependencyTemplate] } => RequireIncludeDependencyTemplate {},
     { [Function: RequireEnsureItemDependency] Template: [Function: NullDependencyTemplate] } => NullDependencyTemplate {},
     { [Function: RequireEnsureDependency] Template: [Function: RequireEnsureDependencyTemplate] } => RequireEnsureDependencyTemplate {},
     { [Function: RequireContextDependency] Template: [Function: ModuleDependencyTemplateAsRequireId] } => ModuleDependencyTemplateAsRequireId {},
     { [Function: ImportDependency] Template: [Function: ImportDependencyTemplate] } => ImportDependencyTemplate {},
     { [Function: ImportContextDependency]
     Template: [Function: ContextDependencyTemplateAsRequireCall] } => ContextDependencyTemplateAsRequireCall {} },
  fileTimestamps: {},
  contextTimestamps: {},
  name: undefined,
  compilationDependencies: [] }
chunk    {[1m[33m0[39m[22m} [1m[32mbundle.js[39m[22m (main) 6.6 kB[1m[33m [entry][39m[22m[1m[32m [rendered][39m[22m
Child [1mworker[39m[22m:
    chunk    {[1m[33m0[39m[22m} [1m[32mc018cb2a2db59eec2baa.worker.js[39m[22m (main) 30 bytes[1m[33m [entry][39m[22m[1m[32m [rendered][39m[22m
Child [1mworker[39m[22m:
    chunk    {[1m[33m0[39m[22m} [1m[32m6965052681590924c079.worker.js[39m[22m (main) 30 bytes[1m[33m [entry][39m[22m[1m[32m [rendered][39m[22m
    1) should not add fallback chunks with inline and fallback === false


  0 passing (218ms)
  1 failing

  1) worker-loader should not add fallback chunks with inline and fallback === false:

      AssertionError: 2 == 0
      + expected - actual

      -2
      +0
      
      at test\index.js:180:14



