{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;kBAEe,gBAAgB;AAAA,MAAP,CAAO,QAAd,KAAc;;AAC7B,SAAO;AACL,aAAS;AACP,uBADO,6BACW,IADX,EACiB,KADjB,EACwB;AAC7B,YAAM,YAAY,KAAK,IAAL,CAAU,MAAV,CAAiB,KAAnC;AACA,YAAM,iBAAiB,SAAS,MAAM,IAAf,IAAuB,OAAO,MAAM,IAAN,CAAW,cAAlB,KAAqC,QAA5D,GAAuE,MAAM,IAAN,CAAW,cAAlF,GAAmG,EAA1H;AACA,YAAI,iBAAa,UAAb,CAAwB,SAAxB,EAAmC,IAAnC,CAAJ,EAA8C;AAC5C,eAAK,IAAL,CAAU,MAAV,CAAiB,KAAjB,GAAyB,iBAAa,2BAAb,CAAyC,SAAzC,EAAoD,MAAM,IAAN,CAAW,IAAX,CAAgB,QAApE,EAA8E,cAA9E,CAAzB;AACD;AACF;AAPM;AADJ,GAAP;AAWD,C","file":"index.js","sourcesContent":["import pluginHelper from './helper';\n\nexport default ({types: t}) => {\n  return {\n    visitor: {\n      ImportDeclaration(path, state) {\n        const givenPath = path.node.source.value;\n        const rootPathSuffix = state && state.opts && typeof state.opts.rootPathSuffix === 'string' ? state.opts.rootPathSuffix : '';\n        if (pluginHelper.startsWith(givenPath, '~/')) {\n          path.node.source.value = pluginHelper.transformRelativeToRootPath(givenPath, state.file.opts.filename, rootPathSuffix);\n        }\n      }\n    }\n  };\n};\n"]}